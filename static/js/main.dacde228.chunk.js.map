{"version":3,"sources":["components/name-modal/name-modal.tsx","assets/comments.svg","store-context.ts","components/comment/comment.tsx","components/comments-section/comments-section.tsx","components/description-section/description-section.tsx","components/card-title-section/card-title-section.tsx","components/card-popup/card-popup.tsx","components/card/card.tsx","assets/plus.svg","components/card-list/card-list.tsx","components/board/board.tsx","data.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["NameModal","isShow","onHide","setUserName","useState","inputValue","setInputValue","onSubmit","Modal","show","size","aria-labelledby","centered","backdrop","Header","closeButton","Title","id","Body","FormControl","aria-label","aria-describedby","placeholder","onChange","e","target","value","onKeyPress","key","autoFocus","Footer","Button","onClick","variant","StoreContext","React","createContext","undefined","Comment","name","text","commentId","username","newComment","setNewComment","isEditing","setIsEditing","store","useContext","InputGroup","className","Append","editComment","alert","deleteComment","CommentsSection","cardId","cardComments","comments","filter","item","addNewComment","map","DescriptionSection","description","newDescription","setNewDescription","isDescriptionEditing","setIsDescriptionEditing","deleteDescription","addNewDecription","CardTitleSection","cardName","columnName","author","newCardName","setNewCardName","editCardName","setEditCardName","deleteCard","CardPopup","stopPropagation","role","tabIndex","Card","card","setIsShow","handleShow","length","src","Comments","alt","CardList","setColumnName","newCard","setNewCard","columnNameHidden","setColumnNameHidden","columnCards","cards","columnId","hideColumnName","editColumnName","Form","preventDefault","addNewCard","Group","controlId","Control","type","Plus","Board","columns","Columns","Cards","App","user","setUser","isModalShow","setIsModalShow","setColumns","setCards","setComments","useEffect","storageNameValue","localStorage","getItem","storageColumnsValue","JSON","parse","storageCardsValue","storageCommentsValue","setItem","stringify","Provider","newValue","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dacde228.chunk.js","sourcesContent":["import React, { useState } from 'react';\n\nimport { Modal, Button, FormControl } from 'react-bootstrap';\n\ninterface ModalProps {\n  isShow: boolean;\n  onHide: () => void;\n  setUserName: (value: string) => void;\n}\n\nconst NameModal: React.FC<ModalProps> = ({ isShow, onHide, setUserName }) => {\n  const [inputValue, setInputValue] = useState('');\n\n  const onSubmit = (): void => {\n    if (inputValue) {\n      onHide();\n      setUserName(inputValue);\n    }\n  };\n\n  const handleKeyPress = (e: React.KeyboardEvent<HTMLInputElement>): void => {\n    if (e.key === 'Enter') {\n      onSubmit();\n    }\n  };\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>): void => {\n    setInputValue(e.target.value);\n  };\n\n  return (\n    <Modal\n      show={isShow}\n      onHide={onHide}\n      size=\"sm\"\n      aria-labelledby=\"contained-modal-title-vcenter\"\n      centered\n      backdrop=\"static\"\n    >\n      <Modal.Header closeButton>\n        <Modal.Title id=\"contained-modal-title-vcenter\">\n          Как вас зовут?\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <FormControl\n          aria-label=\"Default\"\n          aria-describedby=\"inputGroup-sizing-default\"\n          placeholder=\"Ваше имя...\"\n          onChange={handleChange}\n          onKeyPress={handleKeyPress}\n          autoFocus\n        />\n      </Modal.Body>\n      <Modal.Footer>\n        <Button onClick={onSubmit} variant=\"success\">\n          Принять\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  );\n};\n\nexport default NameModal;\n","export default __webpack_public_path__ + \"static/media/comments.44398cb6.svg\";","import React from 'react';\n\nimport { StoreContextInterface } from './interfaces';\n\nexport const StoreContext = React.createContext<StoreContextInterface | undefined>(undefined);\n","import React, { useState, useContext } from 'react';\n\nimport { FormControl, InputGroup, Button } from 'react-bootstrap';\n\nimport { PencilFill, TrashFill } from 'react-bootstrap-icons';\n\nimport { StoreContext } from '../../store-context';\n\nimport './comment.styles.scss';\n\ninterface CommentProps {\n  name: string;\n  text: string;\n  commentId: number;\n  username: string;\n}\n\nconst Comment: React.FC<CommentProps> = ({\n  name,\n  text,\n  commentId,\n  username,\n}) => {\n  const [newComment, setNewComment] = useState('');\n  const [isEditing, setIsEditing] = useState(false);\n  const store = useContext(StoreContext);\n\n  const editComment = () => {\n    if (newComment) {\n      store?.editComment(commentId, newComment);\n      setNewComment('');\n    }\n    setIsEditing(false);\n  };\n\n  const onCommentChange = (e: React.ChangeEvent<HTMLInputElement>): void => {\n    setNewComment(e.target.value);\n  };\n\n  return (\n    <>\n      {isEditing ? (\n        <InputGroup className=\"mb-3\">\n          <FormControl\n            id=\"basic-url\"\n            placeholder=\"Изменить комментарий...\"\n            aria-label=\"Изменить комментарий...\"\n            aria-describedby=\"basic-addon2\"\n            value={newComment}\n            onChange={onCommentChange}\n          />\n          <InputGroup.Append>\n            <Button variant=\"outline-success\" onClick={editComment}>\n              Сохранить\n            </Button>\n          </InputGroup.Append>\n        </InputGroup>\n      ) : (\n        <li className=\"comments-item\">\n          <div className=\"comments-body\">\n            <h5>{name}</h5>\n            <p>{text}</p>\n          </div>\n\n          <div className=\"header__icons\">\n            <PencilFill\n              className=\"icon-edit\"\n              size={17}\n              onClick={() => {\n                username === name\n                  ? setIsEditing(true)\n                  : alert('Вы не можете изменять чужие сообщения');\n              }}\n            />\n            <TrashFill\n              className=\"icon-delete\"\n              size={17}\n              onClick={() =>\n                username === name\n                  ? store?.deleteComment(commentId)\n                  : alert('Вы не можете удалять чужие сообщения')}\n            />\n          </div>\n        </li>\n      )}\n    </>\n  );\n};\n\nexport default Comment;\n","import React, { useState, useContext } from 'react';\n\nimport { Modal, Button, FormControl, InputGroup } from 'react-bootstrap';\nimport { StoreContext } from '../../store-context';\n\nimport Comment from '../comment/comment';\n\nimport './comments-section.styles.scss';\n\ninterface CommentsSectionProps {\n  username: string;\n  cardId: number;\n}\n\nconst CommentsSection: React.FC<CommentsSectionProps> = ({\n  cardId,\n  username,\n}) => {\n  const [newComment, setNewComment] = useState('');\n  const store = useContext(StoreContext);\n  const cardComments = store?.comments?.filter(\n    (item) => item.cardId === cardId,\n  );\n\n  const addComment = () => {\n    if (newComment) {\n      store?.addNewComment(cardId, newComment);\n      setNewComment('');\n    }\n  };\n\n  const onCommentChange = (e: React.ChangeEvent<HTMLInputElement>): void => {\n    setNewComment(e.target.value);\n  };\n\n  return (\n    <Modal.Footer className=\"card-options__footer\">\n      <InputGroup className=\"mb-3\">\n        <FormControl\n          placeholder=\"Напишите новый комментарий...\"\n          aria-label=\"Напишите комментарий...\"\n          aria-describedby=\"basic-addon2\"\n          onChange={onCommentChange}\n          value={newComment}\n        />\n        <InputGroup.Append>\n          <Button variant=\"outline-success\" onClick={addComment}>\n            Сохранить\n          </Button>\n        </InputGroup.Append>\n      </InputGroup>\n      <ul className=\"comments-list\">\n        {cardComments?.map((item) => {\n          return (\n            <Comment\n              key={item.id}\n              name={item.name}\n              text={item.text}\n              commentId={item.id}\n              username={username}\n            />\n          );\n        })}\n      </ul>\n    </Modal.Footer>\n  );\n};\n\nexport default CommentsSection;\n","import React, { useState, useContext } from 'react';\n\nimport { Modal, Button, FormControl, InputGroup } from 'react-bootstrap';\n\nimport { PencilFill, TrashFill } from 'react-bootstrap-icons';\n\nimport { StoreContext } from '../../store-context';\n\nimport './description-section.styles.scss';\n\ninterface DescriptionSectionProps {\n  cardId: number;\n  description: string;\n}\n\nconst DescriptionSection: React.FC<DescriptionSectionProps> = ({\n  cardId,\n  description,\n}) => {\n  const [newDescription, setNewDescription] = useState('');\n  const [isDescriptionEditing, setIsDescriptionEditing] = useState(false);\n  const store = useContext(StoreContext);\n\n  const addDescription = () => {\n    if (newDescription) {\n      store?.addNewDecription(cardId, newDescription);\n      setNewDescription('');\n    }\n    setIsDescriptionEditing(false);\n  };\n\n  const onDescriptionChange = (\n    e: React.ChangeEvent<HTMLInputElement>,\n  ): void => {\n    setNewDescription(e.target.value);\n  };\n\n  return (\n    <Modal.Body className=\"card-options__body\">\n      <div className=\"description-title\">\n        <h3>Описание </h3>\n        <div className=\"header__icons\">\n          <PencilFill\n            className=\"icon-edit\"\n            size={17}\n            onClick={() => setIsDescriptionEditing(true)}\n          />\n          <TrashFill\n            className=\"icon-delete\"\n            size={17}\n            onClick={() => store?.deleteDescription(cardId)}\n          />\n        </div>\n      </div>\n\n      {description && !isDescriptionEditing ? (\n        <>\n          <p>{description}</p>\n        </>\n      ) : (\n        <InputGroup className=\"mb-3\">\n          <FormControl\n            id=\"basic-url\"\n            placeholder=\"Добавить описание...\"\n            aria-label=\"Добавить описание...\"\n            aria-describedby=\"basic-addon2\"\n            onChange={onDescriptionChange}\n            value={newDescription}\n          />\n          <InputGroup.Append>\n            <Button variant=\"outline-success\" onClick={addDescription}>\n              Сохранить\n            </Button>\n          </InputGroup.Append>\n        </InputGroup>\n      )}\n    </Modal.Body>\n  );\n};\n\nexport default DescriptionSection;\n","import React, { useState, useContext } from 'react';\n\nimport { Modal, FormControl, InputGroup, Button } from 'react-bootstrap';\n\nimport { PencilFill, TrashFill } from 'react-bootstrap-icons';\n\nimport { StoreContext } from '../../store-context';\n\nimport './card-title-sectin.styles.scss';\n\ninterface CardTitleSectionProps {\n  cardName: string;\n  cardId: number;\n  columnName: string;\n  author: string;\n}\n\nconst CardTitleSection: React.FC<CardTitleSectionProps> = ({\n  cardName,\n  cardId,\n  columnName,\n  author,\n}) => {\n  const [newCardName, setNewCardName] = useState('');\n  const [editCardName, setEditCardName] = useState(false);\n  const store = useContext(StoreContext);\n\n  const addDescription = () => {\n    if (newCardName) {\n      store?.editCardName(cardId, newCardName);\n      setNewCardName('');\n    }\n    setEditCardName(false);\n  };\n\n  const onCardNameChange = (e: React.ChangeEvent<HTMLInputElement>): void => {\n    setNewCardName(e.target.value);\n  };\n\n  return (\n    <Modal.Header closeButton>\n      <Modal.Title\n        id=\"contained-modal-title-vcenter\"\n        className=\"header__container\"\n      >\n        {editCardName ? (\n          <InputGroup className=\"mb-3\">\n            <FormControl\n              id=\"basic-url\"\n              placeholder=\"Изменить название...\"\n              aria-label=\"Изменить название...\"\n              aria-describedby=\"basic-addon2\"\n              onChange={onCardNameChange}\n              value={newCardName}\n            />\n            <InputGroup.Append>\n              <Button variant=\"outline-success\" onClick={addDescription}>\n                Сохранить\n              </Button>\n            </InputGroup.Append>\n          </InputGroup>\n        ) : (\n          <>\n            <p>\n              {columnName} &gt; {cardName}\n              <small>({author})</small>\n            </p>\n            <div className=\"header__icons\">\n              <PencilFill\n                className=\"icon-edit\"\n                size={20}\n                onClick={() => setEditCardName(true)}\n              />\n              <TrashFill\n                className=\"icon-delete\"\n                size={20}\n                onClick={() => {\n                  store?.deleteCard(cardId);\n                }}\n              />\n            </div>\n          </>\n        )}\n      </Modal.Title>\n    </Modal.Header>\n  );\n};\n\nexport default CardTitleSection;\n","import React from 'react';\n\nimport { Modal } from 'react-bootstrap';\n\nimport CommentsSection from '../comments-section/comments-section';\nimport DescriptionSection from '../description-section/description-section';\nimport CardTitleSection from '../card-title-section/card-title-section';\n\nimport './card-popup.styles.scss';\n\ninterface CardPopupProps {\n  username: string;\n  cardName: string;\n  cardId: number;\n  author: string;\n  description: string;\n  columnName: string;\n  isShow: boolean;\n  onHide: () => void;\n}\n\nconst CardPopup: React.FC<CardPopupProps> = ({\n  cardName,\n  isShow,\n  onHide,\n  description,\n  columnName,\n  cardId,\n  username,\n  author,\n}) => {\n  return (\n    <div onClick={(e) => e.stopPropagation()} role='button' onKeyPress={(e) => {if (e.key === 'Enter'){e.stopPropagation();}}} tabIndex={0}>\n      <Modal\n        show={isShow}\n        onHide={onHide}\n        size=\"lg\"\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered\n        backdrop=\"static\"\n      >\n        <CardTitleSection\n          cardId={cardId}\n          cardName={cardName}\n          columnName={columnName}\n          author={author}\n        />\n        <DescriptionSection description={description} cardId={cardId} />\n        <CommentsSection cardId={cardId} username={username} />\n      </Modal>\n    </div>\n  );\n};\n\nexport default CardPopup;\n","import React, { useState, useContext } from 'react';\n\nimport Comments from '../../assets/comments.svg';\nimport CardPopup from '../card-popup/card-popup';\n\nimport { StoreContext } from '../../store-context';\n\nimport './card.styles.scss';\n\ninterface CardProps {\n  username: string;\n  columnName: string;\n  card: {\n    name: string;\n    id: number;\n    columnId: number;\n    description: string;\n    author: string;\n  };\n}\n\nconst Card: React.FC<CardProps> = ({ card, username, columnName }) => {\n  const [isShow, setIsShow] = useState(false);\n\n  const store = useContext(StoreContext);\n  const comments = store?.comments?.filter(\n    (item) => item.cardId === card.id,\n  );\n\n  const handleClose = () => setIsShow(false);\n  const handleShow = () => setIsShow(true);\n\n  return (\n    <div className=\"card__wrapper\" onClick={handleShow} onKeyPress={(e) => {if (e.key === 'Enter'){handleShow();}}} role=\"button\" tabIndex={0}>\n      <p>{card.name}</p>\n\n      {comments?.length ? (\n        <div className=\"comments-icon\">\n          <img src={Comments} alt=\"comments\" />\n          <p className=\"comments-icon__text\">{comments?.length}</p>\n        </div>\n      ) : (\n        ''\n      )}\n      <CardPopup\n        cardName={card.name}\n        columnName={columnName}\n        isShow={isShow}\n        onHide={handleClose}\n        description={card.description}\n        cardId={card.id}\n        username={username}\n        author={card.author}\n      />\n    </div>\n  );\n};\n\nexport default Card;\n","export default __webpack_public_path__ + \"static/media/plus.05989119.svg\";","import React, { useState, useContext } from 'react';\n\nimport { FormControl, Form, Button } from 'react-bootstrap';\n\nimport Card from '../card/card';\nimport { StoreContext } from '../../store-context';\n\nimport './card-list.styles.scss';\nimport Plus from '../../assets/plus.svg';\n\ninterface CardProps {\n  username: string;\n  item: {\n    id: number;\n    name: string;\n  };\n}\n\nconst CardList: React.FC<CardProps> = ({ item, username }) => {\n  const [isShow, setIsShow] = useState(false);\n  const [columnName, setColumnName] = useState('');\n  const [newCard, setNewCard] = useState('');\n  const [columnNameHidden, setColumnNameHidden] = useState(false);\n\n  const store = useContext(StoreContext);\n  const columnCards = store?.cards?.filter((card) => card.columnId === item.id);\n\n  const hideColumnName = (): void => {\n    setColumnNameHidden(true);\n  };\n\n  const showColumnName = (e: React.KeyboardEvent<HTMLInputElement>): void => {\n    if (e.key === 'Enter') {\n      setColumnNameHidden(false);\n      if (columnName) {\n        store?.editColumnName(item.id, columnName);\n      }\n    }\n  };\n\n  const onColumnNameChange = (e: React.ChangeEvent<HTMLInputElement>): void => {\n    setColumnName(e.target.value);\n  };\n\n  const showNewCardInput = (): void => {\n    setIsShow(true);\n  };\n\n  const onNewCardChange = (e: React.ChangeEvent<HTMLInputElement>): void => {\n    setNewCard(e.target.value);\n  };\n\n  const onNewCardSubmit = (e: React.FormEvent<HTMLFormElement>): void => {\n    e.preventDefault();\n    if (newCard) {\n      store?.addNewCard(item.id, newCard);\n      setNewCard('');\n      setIsShow(false);\n    }\n    setIsShow(false);\n  };\n\n  return (\n    <div className=\"card-list__wrapper\">\n      {columnNameHidden ? (\n        <FormControl\n          autoFocus\n          aria-label=\"Default\"\n          aria-describedby=\"inputGroup-sizing-default\"\n          placeholder={item.name}\n          onChange={onColumnNameChange}\n          onKeyPress={showColumnName}\n        />\n      ) : (\n        <div onClick={hideColumnName} role='button' onKeyPress={(e) => {if (e.key === 'Enter'){hideColumnName();}}} tabIndex={0}><h4>{item.name}</h4></div>\n      )}\n\n      {columnCards?.map(\n        (card: {\n          name: string;\n          id: number;\n          columnId: number;\n          description: string;\n          author: string;\n        }) => {\n          return (\n            <Card\n              key={card.id}\n              card={card}\n              username={username}\n              columnName={item.name}\n            />\n          );\n        },\n      )}\n\n      {isShow ? (\n        <Form onSubmit={onNewCardSubmit} className=\"card-list__form\">\n          <Form.Group controlId=\"formBasicPassword\">\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Заголовок карточки\"\n              autoFocus\n              onChange={onNewCardChange}\n            />\n          </Form.Group>\n          <Button variant=\"success\" type=\"submit\">\n            Добавить карточку\n          </Button>\n        </Form>\n      ) : (\n        <button\n          className=\"card-list__new-card\"\n          onClick={showNewCardInput}\n          type=\"button\"\n        >\n          <img src={Plus} alt=\"plus\" />\n          Добавить карточку\n        </button>\n      )}\n    </div>\n  );\n};\n\nexport default CardList;\n","import React from 'react';\n\nimport CardList from '../card-list/card-list';\nimport Plus from '../../assets/plus.svg';\n\nimport './board.styles.scss';\n\ninterface BoardProps {\n  username: string;\n  columns: {\n    id: number;\n    name: string;\n  }[];\n}\n\nconst Board: React.FC<BoardProps> = ({ username, columns }) => {\n  return (\n    <div className=\"board__wrapper\">\n      {columns.map((item) => {\n        return <CardList key={item.id} item={item} username={username} />;\n      })}\n\n      <div className=\"board__new-card\">\n        <img src={Plus} alt=\"plus\" />\n        Добавить еще одну колонку\n      </div>\n    </div>\n  );\n};\n\nexport default Board;\n","export const Columns = [\n  { id: 1, name: 'TODO' },\n  { id: 2, name: 'add feature' },\n  { id: 3, name: 'In Progress' },\n  { id: 4, name: 'Done' },\n];\n\nexport const Cards = [\n  {\n    name: 'create page',\n    id: 11,\n    columnId: 1,\n    description:\n      'Lorem ipsum dolor sit amet, consectetur adipisicing elit. Consectetur repellendus, nesciunt similique ratione neque aspernatur consequatur veniam exercitationem nostrum quo laborum ipsa, esse nihil pariatur. Ex quasi explicabo fugit unde.',\n    author: 'Jack',\n  },\n  {\n    name: 'add feature',\n    id: 12,\n    columnId: 1,\n    description: '',\n    author: 'Jack',\n  },\n  {\n    name: 'deploy',\n    id: 13,\n    columnId: 1,\n    description: '',\n    author: 'Phil',\n  },\n  {\n    name: 'design for new page',\n    id: 14,\n    columnId: 2,\n    description: '',\n    author: 'Helen',\n  },\n  {\n    name: 'write unit tests',\n    id: 15,\n    columnId: 3,\n    description: '',\n    author: 'Yanis',\n  },\n  {\n    name: 'hand testing',\n    id: 16,\n    columnId: 3,\n    description: '',\n    author: 'Yanis',\n  },\n  {\n    name: 'create architecture',\n    id: 17,\n    columnId: 4,\n    description: '',\n    author: 'Jack',\n  },\n];\n\nexport const Comments = [\n  { name: 'Jessy', text: 'LOL', id: 101, cardId: 11 },\n  {\n    name: 'Nancy',\n    text: 'Is this lorem ipsum??? Where is real description?',\n    id: 102,\n    cardId: 11,\n  },\n  { name: 'Chief', text: 'good luck!', id: 103, cardId: 14 },\n  {\n    name: 'Michael Scott',\n    text: 'NO... no no no please no',\n    id: 104,\n    cardId: 16,\n  },\n];\n","/* eslint-disable no-param-reassign */\nimport React, { useState, useEffect } from 'react';\n\nimport NameModal from './components/name-modal/name-modal';\nimport Board from './components/board/board';\n\nimport { Columns, Cards, Comments } from './data';\nimport { StoreContext } from './store-context';\n\nimport './App.css';\n\nconst App: React.FC = () => {\n  const [user, setUser] = useState('');\n  const [isModalShow, setIsModalShow] = useState(true);\n\n  const [columns, setColumns] = useState(Columns);\n  const [cards, setCards] = useState(Cards);\n  const [comments, setComments] = useState(Comments);\n\n  useEffect(() => {\n    const storageNameValue = localStorage.getItem('username');\n    if (storageNameValue) {\n      setUser(storageNameValue);\n    }\n    const storageColumnsValue = localStorage.getItem('columns');\n    if (storageColumnsValue) {\n      setColumns(JSON.parse(storageColumnsValue));\n    }\n    const storageCardsValue = localStorage.getItem('cards');\n    if (storageCardsValue) {\n      setCards(JSON.parse(storageCardsValue));\n    }\n    const storageCommentsValue = localStorage.getItem('comments');\n    if (storageCommentsValue) {\n      setComments(JSON.parse(storageCommentsValue));\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem('columns', JSON.stringify(columns));\n    localStorage.setItem('cards', JSON.stringify(cards));\n    localStorage.setItem('comments', JSON.stringify(comments));\n  }, [columns, cards, comments]);\n\n  const setUserName = (value: string): void => {\n    setUser(value);\n    localStorage.setItem('username', value);\n  };\n\n  const editColumnName = (columnId: number, newValue: string): void => {\n    setColumns(\n      columns.map((item) => {\n        if (item.id === columnId) {\n          item.name = newValue;\n        }\n        return item;\n      }),\n    );\n  };\n\n  const editCardName = (cardId: number, newValue: string): void => {\n    setCards(\n      cards.map((item) => {\n        if (item.id === cardId) {\n          item.name = newValue;\n        }\n        return item;\n      }),\n    );\n  };\n\n  const editComment = (commentId: number, newValue: string): void => {\n    setComments(\n      comments.map((item) => {\n        if (item.id === commentId) {\n          item.text = newValue;\n        }\n        return item;\n      }),\n    );\n  };\n\n  const addNewCard = (columnId: number, newValue: string): void => {\n    setCards([\n      ...cards,\n      {\n        name: newValue,\n        id: cards[cards.length - 1].id + 1,\n        columnId,\n        description: '',\n        author: user,\n      },\n    ]);\n  };\n\n  const addNewComment = (cardId: number, newValue: string): void => {\n    setComments([\n      ...comments,\n      {\n        name: user,\n        text: newValue,\n        id: comments[comments.length - 1].id + 1,\n        cardId,\n      },\n    ]);\n  };\n\n  const addNewDecription = (cardId: number, value: string): void => {\n    setCards(\n      cards.map((item) => {\n        if (item.id === cardId) {\n          item.description = value;\n        }\n        return item;\n      }),\n    );\n  };\n\n  const deleteDescription = (cardId: number): void => {\n    setCards(\n      cards.map((item) => {\n        if (item.id === cardId) {\n          item.description = '';\n        }\n        return item;\n      }),\n    );\n  };\n\n  const deleteCard = (cardId: number): void => {\n    setCards(cards.filter((item) => item.id !== cardId));\n  };\n\n  const deleteComment = (commentId: number): void => {\n    setComments(comments.filter((item) => item.id !== commentId));\n  };\n\n  return (\n    <div className=\"App\">\n      {user ? (\n        <StoreContext.Provider\n          value={{\n            editColumnName,\n            addNewCard,\n            addNewComment,\n            addNewDecription,\n            deleteDescription,\n            editCardName,\n            deleteCard,\n            editComment,\n            deleteComment,\n            cards,\n            comments,\n          }}\n        >\n          <Board username={user} columns={columns} />\n        </StoreContext.Provider>\n      ) : (\n        <NameModal\n          isShow={isModalShow}\n          onHide={() => setIsModalShow(false)}\n          setUserName={setUserName}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\n\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}